name: 'dhis2: verify (lib)'

on:
    push:
    pull_request:
        types: [labeled]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}

env:
    GIT_AUTHOR_NAME: '@dhis2-bot'
    GIT_AUTHOR_EMAIL: 'apps@dhis2.org'
    GIT_COMMITTER_NAME: '@dhis2-bot'
    GIT_COMMITTER_EMAIL: 'apps@dhis2.org'
    NPM_TOKEN: ${{ secrets.DHIS2_BOT_NPM_TOKEN }}
    GH_TOKEN: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}
    D2_VERBOSE: true

jobs:
    setup-matrix:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.specs }}
        steps:
            - uses: actions/checkout@v3
            - name: Generate test matrix
              id: set-matrix
              run: |
                  node cypress/support/generateTestMatrix.js > matrix.json
                  echo "::set-output name=specs::$(cat matrix.json)"

    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - run: exit 1

    lint:
        needs: [build]
        runs-on: ubuntu-latest
        steps:
            - run: exit 1
    send-slack-message:
        runs-on: ubuntu-latest
        uses: ./.github/workflows/slack-notify.yml
        if: |
          always() &&
          github.ref == 'refs/heads/fix/action-slack'
        # needs: [build, lint, test, e2e, publish]
        needs: [build, lint]
        with:
            notification_status: (failure() && "failure") || (success() && "success")
        # steps:
        #     - run: echo "${{ needs.lint.result }}"
        #     - run: echo "${{ contains(needs.*.result, "failure")  }}"
        #     - uses: rtCamp/action-slack-notify@v2
        #       env:
        #           SLACK_USERNAME: 'dhis2-bot'
        #           SLACK_WEBHOOK: ${{ secrets.SLACK_EXTENSIBILITY_WEBHOOK }}
        #           SLACK_CHANNEL: 'team-extensibility-notifications'
        #           SLACK_MESSAGE: ${{ needs.*.result }}
        #           SLACK_MESSAGE_ON_FAILURE: 'Master branch failed to build or publish the UI library.'
        #           SLACK_COLOR: ${{ needs.*.result }}

                  
